#! /bin/sh -e

# Copyright (c) 2009  Openismus GmbH  <http://www.openismus.com/>
#
# @configure_input@
#
# mm-common is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 2 of the License,
# or (at your option) any later version.
#
# mm-common is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with mm-common.  If not, see <http://www.gnu.org/licenses/>.

prefix="@prefix@"
datarootdir="@datarootdir@"
datadir="@datadir@"
pkgdatadir="${datadir}/@PACKAGE_TARNAME@"

progname=${0##*/}
installcmd='ln -s'
instaction=symlinking
forceflag=
target=.
doctooldir=
buildscriptdir=

for arg
do
  case $arg in
  '-?'|--help)
    cat <<EOF
Usage: $progname [OPTION]... [DIRECTORY | CONFIGURE-FILE]

Prepare a C++ binding module to use mm-common.

 -c, --copy          copy files rather than symlinking them
 -f, --force         replace existing files
     --help          display this help message
     --version       print version information
     --doctooldir=DIR where to store doc tool files (Meson build)
     --buildscriptdir=DIR where to store build scripts (Meson build)
 DIRECTORY | CONFIGURE-FILE (Autotools build)
EOF
    exit 0
    ;;
  --version)
    echo "$progname @PACKAGE_VERSION@"
    exit 0
    ;;
  -c|--copy)
    installcmd=cp
    instaction=copying
    ;;
  -f|--force)
    forceflag=' -f'
    ;;
  -cf|-fc)
    installcmd=cp
    instaction=copying
    forceflag=' -f'
    ;;
  --doctooldir=*)
    doctooldir="${arg#--doctooldir=}"
    ;;
  --buildscriptdir=*)
    buildscriptdir="${arg#--buildscriptdir=}"
    ;;
  -*)
    echo "$progname: error: unrecognized option '$arg'" >&2
    exit 1
    ;;
  ?*)
    target=${arg%/}
    ;;
  esac
done

# Copy or link files for Meson build.
if [ -n "$doctooldir" ]; then
  echo "$progname: putting documentation utilities in '$doctooldir'."
  # -p == --parents (Posix does not support long options.)
  mkdir -p "$doctooldir"

  for file in doc-install.pl doc-postprocess.pl doxygen.css doxygen-extra.css tagfile-to-devhelp2.xsl
  do
    # Don't update the timestamp of $doctooldir/$file, if it's equal to "$pkgdatadir/doctool/$file".
    # if file-does-not-exist || (force && files-are-not-equal)
    # -s == --quiet, --silent
    if test ! -f "$doctooldir/$file" || \
       { test -n "$forceflag" && ! cmp -s "$pkgdatadir/doctool/$file" "$doctooldir/$file"; }; then
      echo "$progname: $instaction file '$file'"
      $installcmd$forceflag "$pkgdatadir/doctool/$file" "$doctooldir/$file"
    fi
  done
fi

if [ -n "$buildscriptdir" ]; then
  echo "$progname: putting Meson build scripts in '$buildscriptdir'."
  mkdir -p "$buildscriptdir"

  for file in dist-build-scripts.sh dist-changelog.sh doc-reference.sh generate-binding.sh
  do
    if test ! -f "$buildscriptdir/$file" || \
       { test -n "$forceflag" && ! cmp -s "$pkgdatadir/build/$file" "$buildscriptdir/$file"; }; then
      echo "$progname: $instaction file '$file'"
      $installcmd$forceflag "$pkgdatadir/build/$file" "$buildscriptdir/$file"
    fi
  done
fi

if [ -n "$doctooldir" -o -n "$buildscriptdir" ]; then
  exit 0
fi

# Copy or link files for Autotools build.
# The configure.ac file is read in order to find directories where to store files.

if test -d "$target"; then
  srcdir=$target
  acfile=$target/configure.ac
else
  srcdir=${target%/*}
  acfile=$target
fi

if test ! -f "$acfile"; then
  echo "$progname: error: $acfile not found" >&2
  exit 1
fi

# Extract the directory macro arguments from configure.ac
s='	 ' # tab+space
auxdir=`sed -n "s/^[$s]*AC_CONFIG_AUX_DIR([[$s]*\\([^])\$,$s]*\\).*/\\1/p" "$acfile"`
doctooldir=`sed -n "s/^[$s]*MM_CONFIG_DOCTOOL_DIR([[$s]*\\([^])\$,$s]*\\).*/\\1/p" "$acfile"`

auxdir=$srcdir${auxdir:+/}$auxdir
echo "$progname: putting auxiliary Automake files in '$auxdir'."
test -d "$auxdir" || mkdir "$auxdir"

for file in compile-binding.am dist-changelog.am doc-reference.am generate-binding.am
do
  if test -n "$forceflag" || test ! -f "$auxdir/$file"; then
    echo "$progname: $instaction file '$file'"
    $installcmd$forceflag "$pkgdatadir/build/$file" "$auxdir/$file"
  fi
done

if test -n "$doctooldir"
then
  doctooldir=$srcdir/$doctooldir
  echo "$progname: putting documentation utilities in '$doctooldir'."
  test -d "$doctooldir" || mkdir "$doctooldir"

  for file in doc-install.pl doc-postprocess.pl doxygen.css doxygen-extra.css tagfile-to-devhelp2.xsl
  do
    if test -n "$forceflag" || test ! -f "$doctooldir/$file"; then
      echo "$progname: $instaction file '$file'"
      $installcmd$forceflag "$pkgdatadir/doctool/$file" "$doctooldir/$file"
    fi
  done
fi

exit 0
